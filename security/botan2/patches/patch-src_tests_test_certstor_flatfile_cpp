$OpenBSD: patch-src_tests_test_certstor_flatfile_cpp,v 1.1 2021/10/05 05:32:30 tb Exp $

Use ISRG Root X1 instead of DST Root CA X3

Index: src/tests/test_certstor_flatfile.cpp
--- src/tests/test_certstor_flatfile.cpp.orig
+++ src/tests/test_certstor_flatfile.cpp
@@ -65,7 +65,7 @@ Test::Result find_certificate_by_pubkey_sha1()
          {
          auto cns = cert->subject_dn().get_attribute("CN");
          result.test_int_eq("exactly one CN", cns.size(), 1);
-         result.test_eq("CN", cns.front(), "DST Root CA X3");
+         result.test_eq("CN", cns.front(), "ISRG Root X1");
          }
       }
    catch(std::exception& e)
@@ -99,7 +99,7 @@ Test::Result find_cert_by_subject_dn()
          {
          auto cns = cert->subject_dn().get_attribute("CN");
          result.test_int_eq("exactly one CN", cns.size(), 1);
-         result.test_eq("CN", cns.front(), "DST Root CA X3");
+         result.test_eq("CN", cns.front(), "ISRG Root X1");
          }
       }
    catch(std::exception& e)
@@ -156,7 +156,7 @@ Test::Result find_cert_by_subject_dn_and_key_id()
          {
          auto cns = cert->subject_dn().get_attribute("CN");
          result.test_int_eq("exactly one CN", cns.size(), 1);
-         result.test_eq("CN", cns.front(), "DST Root CA X3");
+         result.test_eq("CN", cns.front(), "ISRG Root X1");
          }
       }
    catch(std::exception& e)
@@ -185,7 +185,7 @@ Test::Result find_certs_by_subject_dn_and_key_id()
          {
          auto cns = certs.front()->subject_dn().get_attribute("CN");
          result.test_int_eq("exactly one CN", cns.size(), 1);
-         result.test_eq("CN", cns.front(), "DST Root CA X3");
+         result.test_eq("CN", cns.front(), "ISRG Root X1");
          }
       }
    catch(std::exception& e)
