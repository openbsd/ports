$OpenBSD: patch-LibreNMS_OS_Routeros_php,v 1.3 2021/10/22 08:51:32 sthen Exp $

From d69061590e55ff20ddda3ebd9a0f3e415b378039 Mon Sep 17 00:00:00 2001
From: Tony Murray <murraytony@gmail.com>
Date: Tue, 19 Oct 2021 20:22:45 -0500
Subject: [PATCH] Re-write Routeros wireless code It now works like most other
 devices

Index: LibreNMS/OS/Routeros.php
--- LibreNMS/OS/Routeros.php.orig
+++ LibreNMS/OS/Routeros.php
@@ -55,7 +55,6 @@ class Routeros extends OS implements
     WirelessSinrDiscovery,
     WirelessQualityDiscovery
 {
-    private $data;
 
     /**
      * Returns an array of LibreNMS\Device\Sensor objects that have been discovered
@@ -64,13 +63,15 @@ class Routeros extends OS implements
      */
     public function discoverWirelessCcq()
     {
-        $data = $this->fetchData();
         $sensors = [];
+
+        $data = $this->getCacheTable('MIKROTIK-MIB::mtxrWlApTable');
         foreach ($data as $index => $entry) {
             // skip sensors with no data (nv2 should report 1 client, but doesn't report ccq)
             if ($entry['mtxrWlApClientCount'] > 0 && $entry['mtxrWlApOverallTxCCQ'] == 0) {
                 continue;
             }
+            $freq = $entry['mtxrWlApFreq'] ? substr($entry['mtxrWlApFreq'], 0, 1) . 'G' : 'SSID';
 
             $sensors[] = new WirelessSensor(
                 'ccq',
@@ -78,7 +79,7 @@ class Routeros extends OS implements
                 '.1.3.6.1.4.1.14988.1.1.1.3.1.10.' . $index,
                 'mikrotik',
                 $index,
-                'SSID: ' . $entry['mtxrWlApSsid'],
+                "$freq: " . $entry['mtxrWlApSsid'],
                 $entry['mtxrWlApOverallTxCCQ']
             );
         }
@@ -93,11 +94,23 @@ class Routeros extends OS implements
      */
     public function discoverWirelessClients()
     {
-        return $this->discoverSensor(
-            'clients',
-            'mtxrWlApClientCount',
-            '.1.3.6.1.4.1.14988.1.1.1.3.1.6.'
-        );
+        $sensors = [];
+        $data = $this->getCacheTable('MIKROTIK-MIB::mtxrWlApTable');
+        foreach ($data as $index => $entry) {
+            $freq = $entry['mtxrWlApFreq'] ? substr($entry['mtxrWlApFreq'], 0, 1) . 'G' : 'SSID';
+
+            $sensors[] = new WirelessSensor(
+                'clients',
+                $this->getDeviceId(),
+                '.1.3.6.1.4.1.14988.1.1.1.3.1.6.' . $index,
+                'mikrotik',
+                $index,
+                "$freq: " . $entry['mtxrWlApSsid'],
+                $entry['mtxrWlApClientCount']
+            );
+        }
+
+        return $sensors;
     }
 
     /**
@@ -108,25 +121,40 @@ class Routeros extends OS implements
      */
     public function discoverWirelessFrequency()
     {
-        $data = $this->fetchData();
-
+        $sensors = [];
+        $data = $this->getCacheTable('MIKROTIK-MIB::mtxrWlApTable');
         foreach ($data as $index => $entry) {
-            if ($entry['mtxrWlApFreq'] == null) {
-                return $this->discoverSensor(
-                    'frequency',
-                    'mtxrWl60GFreq',
-                    '.1.3.6.1.4.1.14988.1.1.1.8.1.6.'
-                );
-            } else {
-                return $this->discoverSensor(
-                    'frequency',
-                    'mtxrWlApFreq',
-                    '.1.3.6.1.4.1.14988.1.1.1.3.1.7.'
-                );
+            if ($entry['mtxrWlApFreq'] === '0') {
+                continue;
             }
+            $freq = substr($entry['mtxrWlApFreq'], 0, 1) . 'G';
+
+
+            $sensors[] = new WirelessSensor(
+                'frequency',
+                $this->getDeviceId(),
+                '.1.3.6.1.4.1.14988.1.1.1.3.1.7.' . $index,
+                'mikrotik',
+                $index,
+                "$freq: " . $entry['mtxrWlApSsid'],
+                $entry['mtxrWlApFreq']
+            );
         }
 
-        return [];
+        $data = $this->getCacheTable('MIKROTIK-MIB::mtxrWl60GTable');
+        foreach ($data as $index => $entry) {
+            $sensors[] = new WirelessSensor(
+                'frequency',
+                $this->getDeviceId(),
+                '.1.3.6.1.4.1.14988.1.1.1.8.1.6.' . $index,
+                'mikrotik-60g',
+                $index,
+                '60G: ' . $entry['mtxrWl60GSsid'],
+                $entry['mtxrWl60GFreq']
+            );
+        }
+
+        return $sensors;
     }
 
     /**
@@ -137,11 +165,22 @@ class Routeros extends OS implements
      */
     public function discoverWirelessRssi()
     {
-        return $this->discoverSensor(
-            'rssi',
-            'mtxrWl60GRssi',
-            '.1.3.6.1.4.1.14988.1.1.1.8.1.12.'
-        );
+        $sensors = [];
+        $data = $this->getCacheTable('MIKROTIK-MIB::mtxrWl60GTable');
+
+        foreach ($data as $index => $entry) {
+            $sensors[] = new WirelessSensor(
+                'rssi',
+                $this->getDeviceId(),
+                '.1.3.6.1.4.1.14988.1.1.1.8.1.12.' . $index,
+                'mikrotik',
+                $index,
+                '60G: ' . $entry['mtxrWl60GSsid'],
+                $entry['mtxrWl60GRssi']
+            );
+        }
+
+        return $sensors;
     }
 
     /**
@@ -152,11 +191,22 @@ class Routeros extends OS implements
      */
     public function discoverWirelessQuality()
     {
-        return $this->discoverSensor(
-            'quality',
-            'mtxrWl60GSignal',
-            '.1.3.6.1.4.1.14988.1.1.1.8.1.8.'
-        );
+        $sensors = [];
+        $data = $this->getCacheTable('MIKROTIK-MIB::mtxrWl60GTable');
+
+        foreach ($data as $index => $entry) {
+            $sensors[] = new WirelessSensor(
+                'quality',
+                $this->getDeviceId(),
+                '.1.3.6.1.4.1.14988.1.1.1.8.1.8.' . $index,
+                'mikrotik',
+                $index,
+                '60G: ' . $entry['mtxrWl60GSsid'],
+                $entry['mtxrWl60GSignal']
+            );
+        }
+
+        return $sensors;
     }
 
     /**
@@ -166,11 +216,24 @@ class Routeros extends OS implements
      */
     public function discoverWirelessNoiseFloor()
     {
-        return $this->discoverSensor(
-            'noise-floor',
-            'mtxrWlApNoiseFloor',
-            '.1.3.6.1.4.1.14988.1.1.1.3.1.9.'
-        );
+        $sensors = [];
+        $data = $this->getCacheTable('MIKROTIK-MIB::mtxrWlApTable');
+
+        foreach ($data as $index => $entry) {
+            $freq = $entry['mtxrWlApFreq'] ? substr($entry['mtxrWlApFreq'], 0, 1) . 'G' : 'SSID';
+
+            $sensors[] = new WirelessSensor(
+                'noise-floor',
+                $this->getDeviceId(),
+                '.1.3.6.1.4.1.14988.1.1.1.3.1.9.' . $index,
+                'mikrotik',
+                $index,
+                "$freq: " . $entry['mtxrWlApSsid'],
+                $entry['mtxrWlApNoiseFloor']
+            );
+        }
+
+        return $sensors;
     }
 
     /**
@@ -181,9 +244,13 @@ class Routeros extends OS implements
      */
     public function discoverWirelessRate()
     {
-        $data = $this->fetchData();
         $sensors = [];
+        $data = $this->getCacheTable('MIKROTIK-MIB::mtxrWlApTable');
         foreach ($data as $index => $entry) {
+            if ($entry['mtxrWlApTxRate'] === '0' && $entry['mtxrWlApRxRate'] === '0') {
+                continue;  // no data
+            }
+
             $sensors[] = new WirelessSensor(
                 'rate',
                 $this->getDeviceId(),
