$OpenBSD: patch-src_impala_io_c,v 1.3 2021/09/15 21:55:07 tb Exp $

Avoid printf %n

Index: src/impala/io.c
--- src/impala/io.c.orig
+++ src/impala/io.c
@@ -1413,10 +1413,10 @@ static void mclva_dump
    ;  }
 
       if (vid>=0)
-      {  fprintf(fp, "%ld%n", (long) vid, &n_converted)
+      {  n_converted = fprintf(fp, "%ld", (long) vid)
       ;  nr_chars += n_converted
       ;  if (vec->val != 0.0)
-            fprintf(fp, ":%.*g%n", valdigits, (double) vec->val, &n_converted)
+            n_converted = fprintf(fp, ":%.*g", valdigits, (double) vec->val)
          ,  nr_chars += n_converted
       ;  while (nr_chars+1 < leadwidth)  /* we get one below */
          {  fputs(" ", fp)
@@ -1426,18 +1426,17 @@ static void mclva_dump
 
       for (d=0; d<vec->n_ivps;d++)
       {  if (valdigits > -1)
-         {  fprintf
+         {  n_converted = fprintf
             (  fp
-            ,  " %ld:%.*g%n"
+            ,  " %ld:%.*g"
             ,  (long) (vec->ivps+d)->idx
             ,  (int) valdigits
             ,  (double) (vec->ivps+d)->val
-            ,  &n_converted
             )
          ;  nr_chars += n_converted
       ;  }
          else if (valdigits == MCLXIO_VALUE_NONE)
-         {  fprintf(fp, " %ld%n",  (long) (vec->ivps+d)->idx, &n_converted)
+         {  n_converted = fprintf(fp, " %ld",  (long) (vec->ivps+d)->idx)
          ;  nr_chars += n_converted
       ;  }
 
