$OpenBSD: patch-src_makemake_in,v 1.13 2021/09/15 19:13:46 naddy Exp $

Override broken compiler test, attempting to build 32-bit clisp on a
64-bit patform will not work out very well.

Use the correct recipe to build shared modules on OpenBSD.

Fix intparam.h/floatparam.h Makefile rule for parallel make.
https://sourceforge.net/p/clisp/clisp/ci/72d3cffbc699cc0d46c81b6180109f4f6205657b/

Fix text file processing Makefile rules for parallel make.
https://sourceforge.net/p/clisp/clisp/ci/ff4fe3d1b89cc23826f98233858308f6da610de4/

Index: src/makemake.in
--- src/makemake.in.orig
+++ src/makemake.in
@@ -1150,6 +1150,7 @@ esac
 # esac
 
 test -z "$cpu" && cpu=${host_cpu}
+test "$cpu" = "${host_cpu%*64}" && cpu=${host_cpu}
 
 test "${verbose}" = true -o "${verbose}" = yes && \
   cat <<EOF >&2
@@ -1421,10 +1422,10 @@ if [ "${with_dynamic_modules}" != no ]; then
     freebsd2.2*)
       XCC_CREATESHARED='ld -Bshareable -o $lib $libs /usr/lib/c++rt0.o'
       ;;
-    freebsd2* | netbsd* | openbsd*)
+    freebsd2* | netbsd* )
       XCC_CREATESHARED='ld -Bshareable -o $lib $libs'
       ;;
-    freebsd3* | gnu* | linux* | cygwin* | mingw* | k*bsd* | dragonfly*)
+    freebsd3* | gnu* | linux* | cygwin* | mingw* | k*bsd* | dragonfly* | openbsd* )
       XCC_CREATESHARED='${CC} ${CFLAGS} ${CLFLAGS} -shared -o $lib $libs'
       ;;
     hpux9* | hpux10*)
@@ -1904,7 +1905,7 @@ echol "# This can also be used for pre-test and post-r
 echol "#   make distrib VERSION_SUFFIX=pre"
 echol "VERSION_SUFFIX="
 echol "# The distribution's top directory"
-echol 'TOPDIR=clisp-$(VERSION)$(VERSION_SUFFIX)'
+echol 'TOPDIR=clisp'
 echol
 echol '# Directories used by "make install":'
 echol "prefix = ${PREFIX}"
@@ -2404,11 +2405,10 @@ for parf in ${PARAMS}; do
     echotab '$(TOUCH) '"${parf}.h"
   else
     echol "${parf}.h : ${SRCDIR}${parf}.c config.h"
-    echotab "echo '#include \"config.h\"' > tmp.c"
-    echotab "cat '${SRCDIR}${parf}.c' >> tmp.c"
-    echotab_to_HEXE "\$(CC)" "tmp.c" "${parf}"
+    echotab "{ echo '#include \"config.h\"' && cat '${SRCDIR}${parf}.c'; } > gen-${parf}.c"
+    echotab_to_HEXE "\$(CC)" "gen-${parf}.c" "${parf}"
     echotab "${HERE}${parf}${HEXE} ${parf}.h"
-    echotab "\$(RM) ${parf}${HEXE} tmp.c"
+    echotab "\$(RM) ${parf}${HEXE} gen-${parf}.c"
   fi
   echol
 done
@@ -2931,7 +2931,7 @@ fi
 CLISP_="${HERE_}lisp${LEXE} -M ${HERE_}lispinit.mem ${localeflags}${someflags}"
 
 if [ $CROSS = false ] ; then
-  CHECK_DEPS="check-recompile check-fresh-line check-script check-exec-image check-tests"
+  CHECK_DEPS="check-recompile check-fresh-line check-script check-tests"
 
   echol "# check the sources:"
   echol "# 1. subr.d, fsubr.d, subrkw.d and all the LISPFUNs must add up"
@@ -3458,9 +3458,9 @@ for f in $TXT_FILES ; do
     *) sourcedir=${SRCDIR} ;;
   esac
   echol "${f} : ${sourcedir}_${f}${TXT_INCLUDES}${depends} txt2c${HEXE}"
-  echotab "\$(TXT2C) < ${sourcedir}_${f} > txt.c"
-  echotab_to_HEXE "\$(CC) \$(CPPFLAGS) \$(CFLAGS)${flags} \$(CLFLAGS)${XCC_NOOPTFLAGS}" "txt.c" "txt"
-  line="${HERE}txt"
+  echotab "\$(TXT2C) < ${sourcedir}_${f} > gen-${f}.c"
+  echotab_to_HEXE "\$(CC) \$(CPPFLAGS) \$(CFLAGS)${flags} \$(CLFLAGS)${XCC_NOOPTFLAGS}" "gen-${f}.c" "gen-${f}"
+  line="${HERE}gen-${f}"
   test $f = clisp.1 -o $f = clisp-link.1 && \
     line=$line" | \$(GREP) -v ${ARGQ1}^ *\$\$${ARGQ1}"
   # *-1.html is for chunked impnotes and does not depend on user hyperspec
@@ -3470,11 +3470,11 @@ for f in $TXT_FILES ; do
   test $f = distmakefile && line=$line" | sed -e \"s,@@LEXE@@,${LEXE},g\" -e \"s:@@EXPORT_DYNAMIC_FLAG_SPEC@@:${EXPORT_DYNAMIC_FLAG_SPEC}:g\""
   line=$line$platform_line
   echotabpipe "${line} > ${f}"
-  echotab "\$(RM) txt.c"
-  echotab "\$(RM) txt${HEXE}"
+  echotab "\$(RM) gen-${f}.c"
+  echotab "\$(RM) gen-${f}${HEXE}"
   echol
+  OBSOLETE=$OBSOLETE" gen-${f}.c gen-${f}${HEXE}"
 done
-OBSOLETE=$OBSOLETE" txt.c txt${HEXE}"
 
 for f in ${MANPAGES}; do
   if test -n "$GROFF"; then
