$OpenBSD: patch-source_nc_c,v 1.3 2021/09/18 11:21:52 tb Exp $
Index: source/nc.c
--- source/nc.c.orig
+++ source/nc.c
@@ -112,15 +112,15 @@ static const char cmdLineHelp[] =
 #ifdef VMS
 "[Sorry, no on-line help available.]\n"; /* Why is that ? */
 #else
-"Usage:  nc [-read] [-create]\n"
-"           [-line n | +n] [-do command] [-lm languagemode]\n"
-"           [-svrname name] [-svrcmd command]\n"
-"           [-ask] [-noask] [-timeout seconds]\n"
-"           [-geometry geometry | -g geometry] [-icon | -iconic]\n"
-"           [-tabbed] [-untabbed] [-group] [-wait]\n"
-"           [-V | -version] [-h|-help]\n"
-"           [-xrm resourcestring] [-display [host]:server[.screen]]\n"
-"           [--] [file...]\n";
+"Usage:  ncl [-read] [-create]\n"
+"            [-line n | +n] [-do command] [-lm languagemode]\n"
+"            [-svrname name] [-svrcmd command]\n"
+"            [-ask] [-noask] [-timeout seconds]\n"
+"            [-geometry geometry | -g geometry] [-icon | -iconic]\n"
+"            [-tabbed] [-untabbed] [-group] [-wait]\n"
+"            [-V | -version] [-h|-help]\n"
+"            [-xrm resourcestring] [-display [host]:server[.screen]]\n"
+"            [--] [file...]\n";
 #endif /*VMS*/
 
 /* Structure to hold X Resource values */
@@ -778,10 +778,10 @@ static void parseCommandLine(int argc, char **argv, Co
                The "long" cast on strlen() is necessary because size_t
                is 64 bit on Alphas, and 32-bit on most others.  There is
                no printf format specifier for "size_t", thanx, ANSI. */
-    	    sprintf(outPtr, "%d %d %d %d %d %ld %ld %ld %ld\n%n", lineNum,
+    	    charsWritten = sprintf(outPtr, "%d %d %d %d %d %ld %ld %ld %ld\n", lineNum,
 		    read, create, iconic, isTabbed, (long) strlen(path), 
 		    (long) strlen(toDoCommand), (long) strlen(langMode),
-		    (long) strlen(geometry), &charsWritten);
+		    (long) strlen(geometry));
     	    outPtr += charsWritten;
     	    strcpy(outPtr, path);
     	    outPtr += strlen(path);
@@ -816,9 +816,9 @@ static void parseCommandLine(int argc, char **argv, Co
      * iconic state (and optional language mode and geometry).
      */
     if (toDoCommand[0] != '\0' || fileCount == 0) {
-	sprintf(outPtr, "0 0 0 %d %d 0 %ld %ld %ld\n\n%n", iconic, tabbed,
+	charsWritten = sprintf(outPtr, "0 0 0 %d %d 0 %ld %ld %ld\n\n", iconic, tabbed,
 		(long) strlen(toDoCommand),
-		(long) strlen(langMode), (long) strlen(geometry), &charsWritten);
+		(long) strlen(langMode), (long) strlen(geometry));
 	outPtr += charsWritten;
 	strcpy(outPtr, toDoCommand);
 	outPtr += strlen(toDoCommand);
